// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC2
{
    static readonly CreditoClass s_Credito = new CreditoClass();
    public static CreditoClass Credito { get { return s_Credito; } }
    public static Teste.MVC.Controllers.HomeController Home = new Teste.MVC.Controllers.T4MVC_HomeController();
    public static Teste.MVC.Controllers.TesteController Teste = new Teste.MVC.Controllers.T4MVC_TesteController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class CreditoClass
    {
        public readonly string Name = "Credito";
        public Teste.MVC.Areas.Credito.Controllers.CreditoClienteController CreditoCliente = new Teste.MVC.Areas.Credito.Controllers.T4MVC_CreditoClienteController();
        public T4MVC.Credito.SharedController Shared = new T4MVC.Credito.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string bootstrap_editable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-editable.min.js") ? Url("bootstrap-editable.min.js") : Url("bootstrap-editable.js");
        public static readonly string bootstrap_editable_min_js = Url("bootstrap-editable.min.js");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class DataTables_1_10_3 {
            private const string URLPATH = "~/Scripts/DataTables-1.10.3";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string dataTables_autoFill_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.autoFill.min.js") ? Url("dataTables.autoFill.min.js") : Url("dataTables.autoFill.js");
            public static readonly string dataTables_autoFill_min_js = Url("dataTables.autoFill.min.js");
            public static readonly string dataTables_bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap.min.js") ? Url("dataTables.bootstrap.min.js") : Url("dataTables.bootstrap.js");
            public static readonly string dataTables_colReorder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.colReorder.min.js") ? Url("dataTables.colReorder.min.js") : Url("dataTables.colReorder.js");
            public static readonly string dataTables_colReorder_min_js = Url("dataTables.colReorder.min.js");
            public static readonly string dataTables_colVis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.colVis.min.js") ? Url("dataTables.colVis.min.js") : Url("dataTables.colVis.js");
            public static readonly string dataTables_colVis_min_js = Url("dataTables.colVis.min.js");
            public static readonly string dataTables_fixedColumns_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.fixedColumns.min.js") ? Url("dataTables.fixedColumns.min.js") : Url("dataTables.fixedColumns.js");
            public static readonly string dataTables_fixedColumns_min_js = Url("dataTables.fixedColumns.min.js");
            public static readonly string dataTables_fixedHeader_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.fixedHeader.min.js") ? Url("dataTables.fixedHeader.min.js") : Url("dataTables.fixedHeader.js");
            public static readonly string dataTables_fixedHeader_min_js = Url("dataTables.fixedHeader.min.js");
            public static readonly string dataTables_foundation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.foundation.min.js") ? Url("dataTables.foundation.min.js") : Url("dataTables.foundation.js");
            public static readonly string dataTables_jqueryui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.jqueryui.min.js") ? Url("dataTables.jqueryui.min.js") : Url("dataTables.jqueryui.js");
            public static readonly string dataTables_keyTable_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.keyTable.min.js") ? Url("dataTables.keyTable.min.js") : Url("dataTables.keyTable.js");
            public static readonly string dataTables_keyTable_min_js = Url("dataTables.keyTable.min.js");
            public static readonly string dataTables_responsive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.responsive.min.js") ? Url("dataTables.responsive.min.js") : Url("dataTables.responsive.js");
            public static readonly string dataTables_responsive_min_js = Url("dataTables.responsive.min.js");
            public static readonly string dataTables_scroller_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.scroller.min.js") ? Url("dataTables.scroller.min.js") : Url("dataTables.scroller.js");
            public static readonly string dataTables_scroller_min_js = Url("dataTables.scroller.min.js");
            public static readonly string dataTables_tableTools_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.tableTools.min.js") ? Url("dataTables.tableTools.min.js") : Url("dataTables.tableTools.js");
            public static readonly string dataTables_tableTools_min_js = Url("dataTables.tableTools.min.js");
            public static readonly string jquery_dataTables_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.min.js") ? Url("jquery.dataTables.min.js") : Url("jquery.dataTables.js");
            public static readonly string jquery_dataTables_min_js = Url("jquery.dataTables.min.js");
        }
    
        public static readonly string jquery_2_1_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.1.intellisense.min.js") ? Url("jquery-2.1.1.intellisense.min.js") : Url("jquery-2.1.1.intellisense.js");
        public static readonly string jquery_2_1_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.1.min.js") ? Url("jquery-2.1.1.min.js") : Url("jquery-2.1.1.js");
        public static readonly string jquery_2_1_1_min_js = Url("jquery-2.1.1.min.js");
        public static readonly string jquery_2_1_1_min_map = Url("jquery-2.1.1.min.map");
        public static readonly string jquery_pnotify_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.pnotify.min.js") ? Url("jquery.pnotify.min.js") : Url("jquery.pnotify.js");
        public static readonly string jquery_pnotify_min_js = Url("jquery.pnotify.min.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        public static readonly string modernizr_2_8_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.8.3.min.js") ? Url("modernizr-2.8.3.min.js") : Url("modernizr-2.8.3.js");
        public static readonly string pnotify_custom_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pnotify.custom.min.js") ? Url("pnotify.custom.min.js") : Url("pnotify.custom.js");
        public static readonly string pnotify_custom_min_js = Url("pnotify.custom.min.js");
        public static readonly string r_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/r.min.js") ? Url("r.min.js") : Url("r.js");
        public static readonly string require_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/require.min.js") ? Url("require.min.js") : Url("require.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Select2_locales {
            private const string URLPATH = "~/Scripts/Select2-locales";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string select2_locale_ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_ar.min.js") ? Url("select2_locale_ar.min.js") : Url("select2_locale_ar.js");
            public static readonly string select2_locale_az_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_az.min.js") ? Url("select2_locale_az.min.js") : Url("select2_locale_az.js");
            public static readonly string select2_locale_bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_bg.min.js") ? Url("select2_locale_bg.min.js") : Url("select2_locale_bg.js");
            public static readonly string select2_locale_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_ca.min.js") ? Url("select2_locale_ca.min.js") : Url("select2_locale_ca.js");
            public static readonly string select2_locale_cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_cs.min.js") ? Url("select2_locale_cs.min.js") : Url("select2_locale_cs.js");
            public static readonly string select2_locale_da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_da.min.js") ? Url("select2_locale_da.min.js") : Url("select2_locale_da.js");
            public static readonly string select2_locale_de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_de.min.js") ? Url("select2_locale_de.min.js") : Url("select2_locale_de.js");
            public static readonly string select2_locale_el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_el.min.js") ? Url("select2_locale_el.min.js") : Url("select2_locale_el.js");
            public static readonly string select2_locale_es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_es.min.js") ? Url("select2_locale_es.min.js") : Url("select2_locale_es.js");
            public static readonly string select2_locale_et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_et.min.js") ? Url("select2_locale_et.min.js") : Url("select2_locale_et.js");
            public static readonly string select2_locale_eu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_eu.min.js") ? Url("select2_locale_eu.min.js") : Url("select2_locale_eu.js");
            public static readonly string select2_locale_fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_fa.min.js") ? Url("select2_locale_fa.min.js") : Url("select2_locale_fa.js");
            public static readonly string select2_locale_fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_fi.min.js") ? Url("select2_locale_fi.min.js") : Url("select2_locale_fi.js");
            public static readonly string select2_locale_fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_fr.min.js") ? Url("select2_locale_fr.min.js") : Url("select2_locale_fr.js");
            public static readonly string select2_locale_gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_gl.min.js") ? Url("select2_locale_gl.min.js") : Url("select2_locale_gl.js");
            public static readonly string select2_locale_he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_he.min.js") ? Url("select2_locale_he.min.js") : Url("select2_locale_he.js");
            public static readonly string select2_locale_hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_hr.min.js") ? Url("select2_locale_hr.min.js") : Url("select2_locale_hr.js");
            public static readonly string select2_locale_hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_hu.min.js") ? Url("select2_locale_hu.min.js") : Url("select2_locale_hu.js");
            public static readonly string select2_locale_id_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_id.min.js") ? Url("select2_locale_id.min.js") : Url("select2_locale_id.js");
            public static readonly string select2_locale_is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_is.min.js") ? Url("select2_locale_is.min.js") : Url("select2_locale_is.js");
            public static readonly string select2_locale_it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_it.min.js") ? Url("select2_locale_it.min.js") : Url("select2_locale_it.js");
            public static readonly string select2_locale_ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_ja.min.js") ? Url("select2_locale_ja.min.js") : Url("select2_locale_ja.js");
            public static readonly string select2_locale_ka_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_ka.min.js") ? Url("select2_locale_ka.min.js") : Url("select2_locale_ka.js");
            public static readonly string select2_locale_ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_ko.min.js") ? Url("select2_locale_ko.min.js") : Url("select2_locale_ko.js");
            public static readonly string select2_locale_lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_lt.min.js") ? Url("select2_locale_lt.min.js") : Url("select2_locale_lt.js");
            public static readonly string select2_locale_lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_lv.min.js") ? Url("select2_locale_lv.min.js") : Url("select2_locale_lv.js");
            public static readonly string select2_locale_mk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_mk.min.js") ? Url("select2_locale_mk.min.js") : Url("select2_locale_mk.js");
            public static readonly string select2_locale_ms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_ms.min.js") ? Url("select2_locale_ms.min.js") : Url("select2_locale_ms.js");
            public static readonly string select2_locale_nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_nl.min.js") ? Url("select2_locale_nl.min.js") : Url("select2_locale_nl.js");
            public static readonly string select2_locale_no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_no.min.js") ? Url("select2_locale_no.min.js") : Url("select2_locale_no.js");
            public static readonly string select2_locale_pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_pl.min.js") ? Url("select2_locale_pl.min.js") : Url("select2_locale_pl.js");
            public static readonly string select2_locale_pt_BR_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_pt-BR.min.js") ? Url("select2_locale_pt-BR.min.js") : Url("select2_locale_pt-BR.js");
            public static readonly string select2_locale_pt_PT_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_pt-PT.min.js") ? Url("select2_locale_pt-PT.min.js") : Url("select2_locale_pt-PT.js");
            public static readonly string select2_locale_ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_ro.min.js") ? Url("select2_locale_ro.min.js") : Url("select2_locale_ro.js");
            public static readonly string select2_locale_rs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_rs.min.js") ? Url("select2_locale_rs.min.js") : Url("select2_locale_rs.js");
            public static readonly string select2_locale_ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_ru.min.js") ? Url("select2_locale_ru.min.js") : Url("select2_locale_ru.js");
            public static readonly string select2_locale_sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_sk.min.js") ? Url("select2_locale_sk.min.js") : Url("select2_locale_sk.js");
            public static readonly string select2_locale_sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_sv.min.js") ? Url("select2_locale_sv.min.js") : Url("select2_locale_sv.js");
            public static readonly string select2_locale_th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_th.min.js") ? Url("select2_locale_th.min.js") : Url("select2_locale_th.js");
            public static readonly string select2_locale_tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_tr.min.js") ? Url("select2_locale_tr.min.js") : Url("select2_locale_tr.js");
            public static readonly string select2_locale_ua_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_ua.min.js") ? Url("select2_locale_ua.min.js") : Url("select2_locale_ua.js");
            public static readonly string select2_locale_ug_CN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_ug-CN.min.js") ? Url("select2_locale_ug-CN.min.js") : Url("select2_locale_ug-CN.js");
            public static readonly string select2_locale_uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_uk.min.js") ? Url("select2_locale_uk.min.js") : Url("select2_locale_uk.js");
            public static readonly string select2_locale_vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_vi.min.js") ? Url("select2_locale_vi.min.js") : Url("select2_locale_vi.js");
            public static readonly string select2_locale_zh_CN_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_zh-CN.min.js") ? Url("select2_locale_zh-CN.min.js") : Url("select2_locale_zh-CN.js");
            public static readonly string select2_locale_zh_TW_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2_locale_zh-TW.min.js") ? Url("select2_locale_zh-TW.min.js") : Url("select2_locale_zh-TW.js");
        }
    
        public static readonly string select2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2.min.js") ? Url("select2.min.js") : Url("select2.js");
        public static readonly string select2_min_js = Url("select2.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class typings {
            private const string URLPATH = "~/Scripts/typings";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class bootstrap {
                private const string URLPATH = "~/Scripts/typings/bootstrap";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.d.min.js") ? Url("bootstrap.d.min.js") : Url("bootstrap.d.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jquery {
                private const string URLPATH = "~/Scripts/typings/jquery";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.d.min.js") ? Url("jquery.d.min.js") : Url("jquery.d.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jquery_dataTables {
                private const string URLPATH = "~/Scripts/typings/jquery.dataTables";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_dataTables_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.d.min.js") ? Url("jquery.dataTables.d.min.js") : Url("jquery.dataTables.d.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jquery_pnotify {
                private const string URLPATH = "~/Scripts/typings/jquery.pnotify";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_pnotify_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.pnotify.d.min.js") ? Url("jquery.pnotify.d.min.js") : Url("jquery.pnotify.d.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class requirejs {
                private const string URLPATH = "~/Scripts/typings/requirejs";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string require_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/require.d.min.js") ? Url("require.d.min.js") : Url("require.d.js");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class select2 {
                private const string URLPATH = "~/Scripts/typings/select2";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string select2_d_ts = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2.d.min.js") ? Url("select2.d.min.js") : Url("select2.d.js");
            }
        
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bootstrap_editable {
            private const string URLPATH = "~/Content/bootstrap-editable";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Content/bootstrap-editable/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bootstrap_editable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-editable.min.css") ? Url("bootstrap-editable.min.css") : Url("bootstrap-editable.css");
                     
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class img {
                private const string URLPATH = "~/Content/bootstrap-editable/img";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string clear_png = Url("clear.png");
                public static readonly string loading_gif = Url("loading.gif");
            }
        
        }
    
        public static readonly string bootstrap_responsive_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-responsive.min.css") ? Url("bootstrap-responsive.min.css") : Url("bootstrap-responsive.css");
             
        public static readonly string bootstrap_responsive_min_css = Url("bootstrap-responsive.min.css");
        public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
             
        public static readonly string bootstrap_theme_css_map = Url("bootstrap-theme.css.map");
        public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
             
        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            private const string URLPATH = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string select2_spinner_gif = Url("select2-spinner.gif");
            public static readonly string select2_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select2.min.css") ? Url("select2.min.css") : Url("select2.css");
                 
            public static readonly string select2_png = Url("select2.png");
            public static readonly string select2x2_png = Url("select2x2.png");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class DataTables_1_10_3 {
            private const string URLPATH = "~/Content/DataTables-1.10.3";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class css {
                private const string URLPATH = "~/Content/DataTables-1.10.3/css";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string dataTables_autoFill_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.autoFill.min.css") ? Url("dataTables.autoFill.min.css") : Url("dataTables.autoFill.css");
                     
                public static readonly string dataTables_autoFill_min_css = Url("dataTables.autoFill.min.css");
                public static readonly string dataTables_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap.min.css") ? Url("dataTables.bootstrap.min.css") : Url("dataTables.bootstrap.css");
                     
                public static readonly string dataTables_colReorder_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.colReorder.min.css") ? Url("dataTables.colReorder.min.css") : Url("dataTables.colReorder.css");
                     
                public static readonly string dataTables_colReorder_min_css = Url("dataTables.colReorder.min.css");
                public static readonly string dataTables_colVis_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.colVis.min.css") ? Url("dataTables.colVis.min.css") : Url("dataTables.colVis.css");
                     
                public static readonly string dataTables_colvis_jqueryui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.colvis.jqueryui.min.css") ? Url("dataTables.colvis.jqueryui.min.css") : Url("dataTables.colvis.jqueryui.css");
                     
                public static readonly string dataTables_colVis_min_css = Url("dataTables.colVis.min.css");
                public static readonly string dataTables_fixedColumns_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.fixedColumns.min.css") ? Url("dataTables.fixedColumns.min.css") : Url("dataTables.fixedColumns.css");
                     
                public static readonly string dataTables_fixedColumns_min_css = Url("dataTables.fixedColumns.min.css");
                public static readonly string dataTables_fixedHeader_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.fixedHeader.min.css") ? Url("dataTables.fixedHeader.min.css") : Url("dataTables.fixedHeader.css");
                     
                public static readonly string dataTables_fixedHeader_min_css = Url("dataTables.fixedHeader.min.css");
                public static readonly string dataTables_foundation_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.foundation.min.css") ? Url("dataTables.foundation.min.css") : Url("dataTables.foundation.css");
                     
                public static readonly string dataTables_jqueryui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.jqueryui.min.css") ? Url("dataTables.jqueryui.min.css") : Url("dataTables.jqueryui.css");
                     
                public static readonly string dataTables_jqueryui_scss = Url("dataTables.jqueryui.scss");
                public static readonly string dataTables_keyTable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.keyTable.min.css") ? Url("dataTables.keyTable.min.css") : Url("dataTables.keyTable.css");
                     
                public static readonly string dataTables_keyTable_min_css = Url("dataTables.keyTable.min.css");
                public static readonly string dataTables_responsive_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.responsive.min.css") ? Url("dataTables.responsive.min.css") : Url("dataTables.responsive.css");
                     
                public static readonly string dataTables_responsive_scss = Url("dataTables.responsive.scss");
                public static readonly string dataTables_scroller_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.scroller.min.css") ? Url("dataTables.scroller.min.css") : Url("dataTables.scroller.css");
                     
                public static readonly string dataTables_scroller_min_css = Url("dataTables.scroller.min.css");
                public static readonly string dataTables_tableTools_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.tableTools.min.css") ? Url("dataTables.tableTools.min.css") : Url("dataTables.tableTools.css");
                     
                public static readonly string dataTables_tableTools_min_css = Url("dataTables.tableTools.min.css");
                public static readonly string jquery_dataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.min.css") ? Url("jquery.dataTables.min.css") : Url("jquery.dataTables.css");
                     
                public static readonly string jquery_dataTables_min_css = Url("jquery.dataTables.min.css");
                public static readonly string jquery_dataTables_themeroller_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables_themeroller.min.css") ? Url("jquery.dataTables_themeroller.min.css") : Url("jquery.dataTables_themeroller.css");
                     
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class images {
                private const string URLPATH = "~/Content/DataTables-1.10.3/images";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string back_disabled_png = Url("back_disabled.png");
                public static readonly string back_enabled_png = Url("back_enabled.png");
                public static readonly string back_enabled_hover_png = Url("back_enabled_hover.png");
                public static readonly string background_png = Url("background.png");
                public static readonly string collection_png = Url("collection.png");
                public static readonly string collection_hover_png = Url("collection_hover.png");
                public static readonly string copy_png = Url("copy.png");
                public static readonly string copy_hover_png = Url("copy_hover.png");
                public static readonly string csv_png = Url("csv.png");
                public static readonly string csv_hover_png = Url("csv_hover.png");
                public static readonly string details_close_png = Url("details_close.png");
                public static readonly string details_open_png = Url("details_open.png");
                public static readonly string filler_png = Url("filler.png");
                public static readonly string forward_disabled_png = Url("forward_disabled.png");
                public static readonly string forward_enabled_png = Url("forward_enabled.png");
                public static readonly string forward_enabled_hover_png = Url("forward_enabled_hover.png");
                public static readonly string insert_png = Url("insert.png");
                public static readonly string loading_background_png = Url("loading-background.png");
                public static readonly string pdf_png = Url("pdf.png");
                public static readonly string pdf_hover_png = Url("pdf_hover.png");
                public static readonly string print_png = Url("print.png");
                public static readonly string print_hover_png = Url("print_hover.png");
                public static readonly string sort_asc_png = Url("sort_asc.png");
                public static readonly string sort_asc_disabled_png = Url("sort_asc_disabled.png");
                public static readonly string sort_both_png = Url("sort_both.png");
                public static readonly string sort_desc_png = Url("sort_desc.png");
                public static readonly string sort_desc_disabled_png = Url("sort_desc_disabled.png");
                public static readonly string xls_png = Url("xls.png");
                public static readonly string xls_hover_png = Url("xls_hover.png");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class swf {
                private const string URLPATH = "~/Content/DataTables-1.10.3/swf";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string copy_csv_xls_swf = Url("copy_csv_xls.swf");
                public static readonly string copy_csv_xls_pdf_swf = Url("copy_csv_xls_pdf.swf");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class images {
            private const string URLPATH = "~/Content/images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string glyphicons_halflings_white_png = Url("glyphicons-halflings-white.png");
            public static readonly string glyphicons_halflings_png = Url("glyphicons-halflings.png");
        }
    
        public static readonly string jquery_pnotify_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.pnotify.min.css") ? Url("jquery.pnotify.min.css") : Url("jquery.pnotify.css");
             
        public static readonly string jquery_pnotify_icons_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.pnotify.icons.min.css") ? Url("jquery.pnotify.icons.min.css") : Url("jquery.pnotify.icons.css");
             
        public static readonly string pnotify_custom_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pnotify.custom.min.css") ? Url("pnotify.custom.min.css") : Url("pnotify.custom.css");
             
        public static readonly string pnotify_custom_min_css = Url("pnotify.custom.min.css");
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
             
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Scripts {}
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Styles {}
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009


